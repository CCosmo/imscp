#!/usr/bin/perl

# i-MSCP - internet Multi Server Control Panel
# Copyright (C) 2010-2013 by internet Multi Server Control Panel
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# @category    i-MSCP
# @copyright   2010-2013 by i-MSCP | http://i-mscp.net
# @author      Daniel Andreca <sci2tech@gmail.com>
# @link        http://i-mscp.net i-MSCP Home Site
# @license     http://www.gnu.org/licenses/gpl-2.0.html GPL v2

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/..";
use lib "$FindBin::Bin/../PerlLib";
use lib "$FindBin::Bin/../PerlVendor";

use iMSCP::Debug;
use iMSCP::Boot;
use Mail::Address;
use MIME::Entity;
use Email::Simple;
use Encode;

# Turn off localisation features to force any command output to be in english
$ENV{'LC_MESSAGES'} = 'C';

umask(027);

newDebug('imscp-arpl-msgr/imscp-arpl-msgr.log');

sub startUp
{
	iMSCP::Boot->getInstance()->boot({ 'nolock' => 'yes', 'norequirements' => 'yes', 'config_readonly' => 'yes' });

	0;
}

sub process
{
	my $from = $ARGV[0];
	$from =~ s/imscp-arpl\.//gim;

	my @msg = <STDIN>;

	my $database = iMSCP::Database->factory();

	my $sql = "DELETE FROM `autoreplies_log` WHERE ADDTIME(`time`, '24:00:00') < NOW()";

	my $rdata = $database->doQuery('delete', $sql);
	unless(ref $rdata eq 'HASH') {
		error($rdata);
	}

	my $mail = Email::Simple->new(join('', @msg));
	my ($to) = Mail::Address->parse($mail->header("From"));

	if (not $to) {
		error("Couldn't parse a From address");
		return 0;
	}

	$to = lc($to->address);

	if(
		$mail->header('X-Mailer') && $mail->header('X-Mailer') =~ m/Autoreply Manager/i ||
		$mail->header('Auto-Submitted') && $mail->header('Auto-Submitted') =~ m/auto-replied/i ||
		$mail->header('Sender') && $mail->header('Sender') =~ m/autoresponder/i ||
		$mail->header('X-Autoresponse-From')
	) {
		return 0;
	}

	$sql = "SELECT `time` FROM `autoreplies_log` WHERE `from` = ? AND `to` = ? AND ADDTIME(`time`, '24:00:00') > NOW()";
	$rdata = $database->doQuery('time', $sql, $from, $to);
	unless(ref $rdata eq 'HASH') {
		error($rdata);;
	}

	return 0 if(scalar keys %{$rdata});

	$sql = "
		SELECT
			CONVERT(`mail_auto_respond_text` using utf8) as `text`
		FROM
			`mail_users`
		WHERE
			`mail_addr` = ?
		AND
			`mail_auto_respond` = 1
	";

	$rdata = iMSCP::Database->factory()->doQuery('text', $sql, $from);
	unless(ref $rdata eq 'HASH'){
		error($rdata);
		return 1;
	}

	return 0 unless(scalar keys %{$rdata});

	my $text = (keys %{$rdata})[0];
	my $out = new MIME::Entity;

	$out->build(
		From => $from,
		To => $to,
		Subject => '[Autoreply] ' . $mail->header('Subject'),
		Type => 'multipart/mixed; charset=utf-8',
		'X-Autoresponse-From' => $from,
		'X-Mailer' => "i-MSCP $main::imscpConfig{'Version'} Autoreply Manager"
	);

	$out->attach(
		Type => 'text/plain; charset=utf-8',
		Encoding => '8bit',
		Description => 'Mail User Autoreply Message',
		Data => Encode::encode('UTF-8', $text)
	);

	$out->attach(
		Type => 'message/rfc822',
		Description => "Original Message",
		Data => join('', @msg)
	);

	open MAIL, '| /usr/sbin/sendmail -t -oi';
	$out->print(\*MAIL);
	close MAIL;

	# Log the autoreply
	$sql = "INSERT INTO `autoreplies_log` (`time`, `from`, `to`) VALUES (NOW(), ?, ?)";
	$rdata = $database->doQuery('insert', $sql, $from, $to);
	unless(ref $rdata eq 'HASH'){
		error($rdata);
		return 1;
	}

	0;
}

my $rs = 0;

$rs = startUp();
$rs ||= process();

exit $rs;
